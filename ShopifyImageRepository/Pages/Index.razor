@page "/"
@inject ShopifyImageRepository.IService.IImageService imageService
@using ShopifyImageRepository.Data
@using ShopifyImageRepository.PageClass

<EditForm Model="@image">
    <div>
        <input @bind="image.ImageName" type="text" placeholder="Image Name" />
    </div>
    <div>
        <InputFile OnChange="OnInputFileChange" multiple/>
    </div>
    <div>
        <button @onclick="SaveImage">Save Image</button>
        <span>@Message</span>
    </div>
</EditForm>


@if (imageList.Count() > 0)
{
    <div class="container">
        <div class="row">
            @foreach (var item in imageList)
            {
                <div class="col">
                    <div>
                        <img style="height: 100%; width: 100%"  src="@item.ImageUrl" />
                    </div>
                    <div>
                        <div>@item.ImageName</div>
                    </div>
                </div>
            }
        </div>
    </div>
}


@code{
    string imgSrc = "";
    string Message = "";
    IFileListEntry file = null;
    byte[] _fileBytes = null;
    ImageModel image = new ImageModel();
    List<ImageModel> imageList = new List<ImageModel>();

    protected override void OnInitialized()
    {
        ReadImage();
    }

    public async Task OnInputFileChange(IFileListEntry[] files)
    {
        if (files.Count() > 0)
        {
            foreach(var item in files)
            {
                using (var ms = new MemoryStream())
                {
                    ImagePage imagePage = new ImagePage(imageService);

                    await item.Data.CopyToAsync(ms);
                    _fileBytes = ms.ToArray();
                    var image = imagePage.GetImage(Convert.ToBase64String(_fileBytes));
                    imgSrc = string.Format("data:image/jpg;base64,{0}" + Convert.ToBase64String(image));
                }
            }

        }
    }

    public void SaveImage()
    {
        ImagePage imagePage = new ImagePage(imageService);
        Message = imagePage.SaveImageInformations(_fileBytes, image);

        image = new ImageModel();
        imgSrc = "";
        ReadImage();
    }

    public void ReadImage()
    {
        ImagePage imagePage = new ImagePage(imageService);
        imageList = imagePage.GetSavedImage();
        Message = "";

    }
}